package com.chatapp.backend.dto.response;

import com.chatapp.backend.entity.enums.ConversationType;
import com.fasterxml.jackson.annotation.JsonInclude;

import lombok.Builder;
import java.util.Set;
import java.time.Instant;

@Builder
@JsonInclude(JsonInclude.Include.NON_NULL)
public record ConversationResponse (
     Long id,
     ConversationType type,
     Set<UserResponse> participants,
     int participantCount,
     MessageResponse lastMessage,
     Instant createdAt,
     Instant updatedAt,
     String groupName,
     String groupDescription,
     String creatorName,
     String creatorAvatarUrl,
     String creatorUserName,
     boolean onlyAdminsCanSend,
     Integer messageRetentionDays,
     Integer maxMembers,
     boolean isGroupPublic
){}
package com.chatapp.backend.dto.response;

@Builder
@JsonInclude(JsonInclude.Include.NON_NULL)
public recor DeliveryStatusSummary (
     int totalRecipients,
     int readCount,
     int deliveredCount,
     Set<UserSummaryResponse> unreadRecipients,
){}package com.chatapp.backend.dto.response;

import com.fasterxml.jackson.annotation.JsonInclude;

import lombok.Builder;
import java.util.Set;

@Builder
@JsonInclude(JsonInclude.Include.NON_NULL)
public record DeliveryStatusSummary (
     int totalRecipients,
     int readCount,
     int deliveredCount,
     Set<UserResponse> unreadRecipients
){}package com.chatapp.backend.dto.response;

import com.chatapp.backend.entity.enums.MediaUploadStatus;
import com.fasterxml.jackson.annotation.JsonInclude;

import lombok.Builder;

@Builder
@JsonInclude(JsonInclude.Include.NON_NULL)
public record MediaResponse (
     Long id,
     String fileName,
     String fileType,
     Long fileSize,
     String uploadUrl,
     MediaUploadStatus uploadStatus,
     String metadata
){}
package com.chatapp.backend.dto.response;

import com.fasterxml.jackson.annotation.JsonInclude;
import java.util.Set;
import lombok.Builder;
import java.time.Instant;

@Builder
@JsonInclude(JsonInclude.Include.NON_NULL)
public record MessageResponse (
     Long id,
     Long conversationId,
     String senderuserName,
     String senderAvatarUrl,
     String senderDisplayName,
     String content,
     Set<MediaResponse> mediaItems,
     MessageType type,
     MessageStatus status,
     Set<ReactionResponse> reactions,
     Instant createdAt,
     Instant editedAt,
     DeliveryStatusSummary deliveryStatus,
){}package com.chatapp.backend.dto.response;

import com.chatapp.backend.entity.enums.ReactionType;
import com.fasterxml.jackson.annotation.JsonInclude;

import lombok.Builder;

@Builder
@JsonInclude(JsonInclude.Include.NON_NULL)
public record ReactionResponse (
     Long id,
     String username,
     String displayName,
     String avatarUrl,
     ReactionType type
){}package com.chatapp.backend.dto.response;

import com.fasterxml.jackson.annotation.JsonInclude;

import lombok.Builder;

@Builder
@JsonInclude(JsonInclude.Include.NON_NULL)
public record UserPreferencesResponse (
     boolean notificationEnabled,
     String theme,
){}package com.chatapp.backend.dto.response;

import java.time.Instant;

import com.chatapp.backend.entity.enums.UserStatus;
import com.fasterxml.jackson.annotation.JsonInclude;

import lombok.Builder;


@Builder
@JsonInclude(JsonInclude.Include.NON_NULL)
public record UserResponse (
    Long id,
    String username,
    String displayName,
    UserStatus status,
    Instant lastSeenAt,
    UserPreferencesResponse preferences,
    Instant createdAt
){}